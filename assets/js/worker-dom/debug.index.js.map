{"version":3,"file":"debug.index.js","sources":["../output/main-thread/strings.js","../output/main-thread/nodes.js","../output/transfer/phase.js","../output/main-thread/serialize.js","../output/main-thread/worker.js","../output/main-thread/command.js","../output/main-thread/mutator.js","../output/main-thread/install.js","../output/main-thread/index.js"],"sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet count = 0;\nconst strings = new Map();\n/**\n * Return a string for the specified index.\n * @param index string index to retrieve.\n * @returns string in map for the index.\n */\nexport function get(index) {\n    return strings.get(index) || '';\n}\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    strings.set(++count, value);\n}\n//# sourceMappingURL=strings.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { get as getString } from './strings';\nlet count = 2;\nlet NODES;\nlet BASE_ELEMENT;\n/**\n * Called when initializing a Worker, ensures the nodes in baseElement are known\n * for transmission into the Worker and future mutation events from the Worker.\n * @param baseElement Element that will be controlled by a Worker\n */\nexport function prepare(baseElement) {\n    // The NODES map is populated with two default values pointing to baseElement.\n    // These are [document, document.body] from the worker.\n    NODES = new Map([[1, baseElement], [2, baseElement]]);\n    BASE_ELEMENT = baseElement;\n    // To ensure a lookup works correctly from baseElement\n    // add an _index_ equal to the background thread document.body.\n    baseElement._index_ = 2;\n    // Lastly, it's important while initializing the document that we store\n    // the default nodes present in the server rendered document.\n    baseElement.childNodes.forEach(node => storeNodes(node));\n}\n/**\n * Store the requested node and all of its children.\n * @param node node to store.\n */\nfunction storeNodes(node) {\n    storeNode(node, ++count);\n    node.childNodes.forEach(node => storeNodes(node));\n}\n/**\n * Create a real DOM Node from a skeleton Object (`{ nodeType, nodeName, attributes, children, data }`)\n * @example <caption>Text node</caption>\n *   createNode({ nodeType:3, data:'foo' })\n * @example <caption>Element node</caption>\n *   createNode({ nodeType:1, nodeName:'div', attributes:[{ name:'a', value:'b' }], childNodes:[ ... ] })\n */\nexport function createNode(skeleton, sanitizer) {\n    if (skeleton[0 /* nodeType */] === 3 /* TEXT_NODE */) {\n        const node = document.createTextNode(getString(skeleton[5 /* textContent */]));\n        storeNode(node, skeleton[7 /* _index_ */]);\n        return node;\n    }\n    const namespace = skeleton[6 /* namespaceURI */] !== undefined ? getString(skeleton[6 /* namespaceURI */]) : undefined;\n    const nodeName = getString(skeleton[1 /* nodeName */]);\n    const node = namespace ? document.createElementNS(namespace, nodeName) : document.createElement(nodeName);\n    // TODO(KB): Restore Properties\n    // skeleton.properties.forEach(property => {\n    //   node[`${property.name}`] = property.value;\n    // });\n    // ((skeleton as TransferrableElement)[TransferrableKeys.childNodes] || []).forEach(childNode => {\n    //   if (childNode[TransferrableKeys.transferred] === NumericBoolean.FALSE) {\n    //     node.appendChild(createNode(childNode as TransferrableNode));\n    //   }\n    // });\n    // If `node` is removed by the sanitizer, don't store it and return null.\n    if (sanitizer && !sanitizer.sanitize(node)) {\n        return null;\n    }\n    storeNode(node, skeleton[7 /* _index_ */]);\n    return node;\n}\n/**\n * Returns the real DOM Element corresponding to a serialized Element object.\n * @param id\n * @return RenderableElement\n */\nexport function getNode(id) {\n    const node = NODES.get(id);\n    if (node && node.nodeName === 'BODY') {\n        // If the node requested is the \"BODY\"\n        // Then we return the base node this specific <amp-script> comes from.\n        // This encapsulates each <amp-script> node.\n        return BASE_ELEMENT;\n    }\n    return node;\n}\n/**\n * Establish link between DOM `node` and worker-generated identifier `id`.\n *\n * These _shouldn't_ collide between instances of <amp-script> since\n * each element creates it's own pool on both sides of the worker\n * communication bridge.\n * @param node\n * @param id\n */\nexport function storeNode(node, id) {\n    node._index_ = id;\n    NODES.set(id, node);\n}\n//# sourceMappingURL=nodes.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport let phase = 0 /* Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst NODES_ALLOWED_TO_TRANSMIT_TEXT_CONTENT = [8 /* COMMENT_NODE */, 3 /* TEXT_NODE */];\nexport const initialStrings = [];\nconst strings = new Map();\nlet count = 0;\nfunction store(value) {\n    if (strings.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return strings.get(value) - 1;\n    }\n    strings.set(value, ++count);\n    initialStrings.push(value);\n    return count - 1;\n}\nexport function createHydrateableNode(element) {\n    let hydrated = {\n        [7 /* _index_ */]: element._index_,\n        [8 /* transferred */]: 0 /* FALSE */,\n        [0 /* nodeType */]: element.nodeType,\n        [1 /* nodeName */]: store(element.nodeName),\n        [4 /* childNodes */]: [].map.call(element.childNodes || [], (child) => createHydrateableNode(child)),\n        [2 /* attributes */]: [].map.call(element.attributes || [], (attribute) => [\n            store(attribute.namespaceURI || 'null'),\n            store(attribute.name),\n            store(attribute.value),\n        ]),\n    };\n    if (element.namespaceURI !== null) {\n        hydrated[6 /* namespaceURI */] = store(element.namespaceURI);\n    }\n    if (NODES_ALLOWED_TO_TRANSMIT_TEXT_CONTENT.includes(element.nodeType) && element.textContent !== null) {\n        hydrated[5 /* textContent */] = store(element.textContent);\n    }\n    return hydrated;\n}\n//# sourceMappingURL=serialize.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { set as setPhase } from '../transfer/phase';\nimport { createHydrateableNode, initialStrings } from './serialize';\n/**\n * Stored callbacks for the most recently created worker.\n * Note: This can be easily changed to a lookup table to support multiple workers.\n */\nlet callbacks_;\n// TODO(KB): Fetch Polyfill for IE11.\nexport function createWorker(baseElement, workerDomURL, authorScriptURL, callbacks) {\n    callbacks_ = callbacks;\n    return Promise.all([fetch(workerDomURL).then(response => response.text()), fetch(authorScriptURL).then(response => response.text())])\n        .then(([workerScript, authorScript]) => {\n        // TODO(KB): Minify this output during build process.\n        const keys = [];\n        for (let key in document.body.style) {\n            keys.push(`'${key}'`);\n        }\n        const hydratedNode = createHydrateableNode(baseElement);\n        const code = `\n        'use strict';\n        ${workerScript}\n        (function() {\n          var self = this;\n          var window = this;\n          var document = this.document;\n          var localStorage = this.localStorage;\n          var location = this.location;\n          var defaultView = document.defaultView;\n          var Node = defaultView.Node;\n          var Text = defaultView.Text;\n          var Element = defaultView.Element;\n          var SVGElement = defaultView.SVGElement;\n          var Document = defaultView.Document;\n          var Event = defaultView.Event;\n          var MutationObserver = defaultView.MutationObserver;\n\n          function addEventListener(type, handler) {\n            return document.addEventListener(type, handler);\n          }\n          function removeEventListener(type, handler) {\n            return document.removeEventListener(type, handler);\n          }\n          this.consumeInitialDOM(document, ${JSON.stringify(initialStrings)}, ${JSON.stringify(hydratedNode)});\n          this.appendKeys([${keys}]);\n          document.observe();\n          ${authorScript}\n        }).call(WorkerThread.workerDOM);\n//# sourceURL=${encodeURI(authorScriptURL)}`;\n        setPhase(1 /* Hydrating */);\n        return new Worker(URL.createObjectURL(new Blob([code])));\n    })\n        .catch(error => {\n        return null;\n    });\n}\n/**\n * @param worker\n * @param message\n */\nexport function messageToWorker(worker, message) {\n    if (callbacks_ && callbacks_.onSendMessage) {\n        callbacks_.onSendMessage(message);\n    }\n    worker.postMessage(message);\n}\n//# sourceMappingURL=worker.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { messageToWorker } from './worker';\nimport { getNode } from './nodes';\nimport { get as getString } from './strings';\nconst KNOWN_LISTENERS = [];\n/**\n * Instead of a whitelist of elements that need their value tracked, use the existence\n * of a property called value to drive the decision.\n * @param node node to check if values should be tracked.\n * @return boolean if the node should have its value property tracked.\n */\nconst shouldTrackChanges = (node) => node && 'value' in node;\n/**\n * When a node that has a value needing synced doesn't already have an event listener\n * listening for changed values, ensure the value is synced with a default listener.\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const applyDefaultChangeListener = (worker, node) => {\n    shouldTrackChanges(node) && node.onchange === null && (node.onchange = () => fireValueChange(worker, node));\n};\n/**\n * Tell the worker DOM what the value is for a Node.\n * @param worker whom to dispatch value toward.\n * @param node where to get the value from.\n */\nconst fireValueChange = (worker, node) => {\n    messageToWorker(worker, {\n        [9 /* type */]: 5 /* SYNC */,\n        [38 /* sync */]: {\n            [7 /* _index_ */]: node._index_,\n            [18 /* value */]: node.value,\n        },\n    });\n};\n/**\n * Register an event handler for dispatching events to worker thread\n * @param worker whom to dispatch events toward\n * @param _index_ node index the event comes from (used to dispatchEvent in worker thread).\n * @return eventHandler function consuming event and dispatching to worker thread\n */\nconst eventHandler = (worker, _index_) => (event) => {\n    if (shouldTrackChanges(event.currentTarget)) {\n        fireValueChange(worker, event.currentTarget);\n    }\n    messageToWorker(worker, {\n        [9 /* type */]: 1 /* EVENT */,\n        [37 /* event */]: {\n            [7 /* _index_ */]: _index_,\n            [22 /* bubbles */]: event.bubbles,\n            [23 /* cancelable */]: event.cancelable,\n            [24 /* cancelBubble */]: event.cancelBubble,\n            [25 /* currentTarget */]: {\n                [7 /* _index_ */]: event.currentTarget._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [26 /* defaultPrevented */]: event.defaultPrevented,\n            [27 /* eventPhase */]: event.eventPhase,\n            [28 /* isTrusted */]: event.isTrusted,\n            [29 /* returnValue */]: event.returnValue,\n            [10 /* target */]: {\n                [7 /* _index_ */]: event.target._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [30 /* timeStamp */]: event.timeStamp,\n            [9 /* type */]: event.type,\n            [32 /* keyCode */]: 'keyCode' in event ? event.keyCode : undefined,\n        },\n    });\n};\n/**\n * Process commands transfered from worker thread to main thread.\n * @param nodesInstance nodes instance to execute commands against.\n * @param worker whom to dispatch events toward.\n * @param mutation mutation record containing commands to execute.\n */\nexport function process(worker, mutation) {\n    const _index_ = mutation[10 /* target */];\n    const target = getNode(_index_);\n    (mutation[21 /* removedEvents */] || []).forEach(eventSub => {\n        processListenerChange(worker, target, false, getString(eventSub[9 /* type */]), eventSub[33 /* index */]);\n    });\n    (mutation[20 /* addedEvents */] || []).forEach(eventSub => {\n        processListenerChange(worker, target, true, getString(eventSub[9 /* type */]), eventSub[33 /* index */]);\n    });\n}\n/**\n * If the worker requests to add an event listener to 'change' for something the foreground thread is already listening to\n * ensure that only a single 'change' event is attached to prevent sending values multiple times.\n * @param worker worker issuing listener changes\n * @param target node to change listeners on\n * @param addEvent is this an 'addEvent' or 'removeEvent' change\n * @param type event type requested to change\n * @param index number in the listeners array this event corresponds to.\n */\nexport function processListenerChange(worker, target, addEvent, type, index) {\n    let changeEventSubscribed = target.onchange !== null;\n    const shouldTrack = shouldTrackChanges(target);\n    const isChangeEvent = type === 'change';\n    if (addEvent) {\n        if (isChangeEvent) {\n            changeEventSubscribed = true;\n            target.onchange = null;\n        }\n        target.addEventListener(type, (KNOWN_LISTENERS[index] = eventHandler(worker, target._index_)));\n    }\n    else {\n        if (isChangeEvent) {\n            changeEventSubscribed = false;\n        }\n        target.removeEventListener(type, KNOWN_LISTENERS[index]);\n    }\n    if (shouldTrack && !changeEventSubscribed) {\n        applyDefaultChangeListener(worker, target);\n    }\n}\n//# sourceMappingURL=command.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNode, createNode } from './nodes';\nimport { store as storeString, get as getString } from './strings';\nimport { process } from './command';\nlet MUTATION_QUEUE = [];\nlet PENDING_MUTATIONS = false;\nlet worker;\nexport function prepareMutate(passedWorker) {\n    worker = passedWorker;\n}\nconst mutators = {\n    [2 /* CHILD_LIST */](mutation, target, sanitizer) {\n        (mutation[12 /* removedNodes */] || []).forEach(node => getNode(node[7 /* _index_ */]).remove());\n        const addedNodes = mutation[11 /* addedNodes */];\n        const nextSibling = mutation[14 /* nextSibling */];\n        if (addedNodes) {\n            addedNodes.forEach(node => {\n                let newChild = null;\n                newChild = getNode(node[7 /* _index_ */]);\n                if (!newChild) {\n                    // Transferred nodes that are not stored were previously removed by the sanitizer.\n                    if (node[8 /* transferred */]) {\n                        return;\n                    }\n                    else {\n                        newChild = createNode(node, sanitizer);\n                    }\n                }\n                if (newChild) {\n                    target.insertBefore(newChild, (nextSibling && getNode(nextSibling[7 /* _index_ */])) || null);\n                }\n                else {\n                    // TODO(choumx): Inform worker that sanitizer removed newChild.\n                }\n            });\n        }\n    },\n    [0 /* ATTRIBUTES */](mutation, target, sanitizer) {\n        const attributeName = mutation[15 /* attributeName */] !== undefined ? getString(mutation[15 /* attributeName */]) : null;\n        const value = mutation[18 /* value */] !== undefined ? getString(mutation[18 /* value */]) : null;\n        if (attributeName != null) {\n            if (value == null) {\n                target.removeAttribute(attributeName);\n            }\n            else {\n                if (!sanitizer || sanitizer.validAttribute(target.nodeName, attributeName, value)) {\n                    target.setAttribute(attributeName, value);\n                }\n                else {\n                    // TODO(choumx): Inform worker that sanitizer ignored unsafe attribute value change.\n                }\n            }\n        }\n    },\n    [1 /* CHARACTER_DATA */](mutation, target) {\n        const value = mutation[18 /* value */];\n        if (value) {\n            // Sanitization not necessary for textContent.\n            target.textContent = getString(value);\n        }\n    },\n    [3 /* PROPERTIES */](mutation, target, sanitizer) {\n        const propertyName = mutation[17 /* propertyName */] !== undefined ? getString(mutation[17 /* propertyName */]) : null;\n        const value = mutation[18 /* value */] !== undefined ? getString(mutation[18 /* value */]) : null;\n        if (propertyName && value) {\n            if (!sanitizer || sanitizer.validProperty(target.nodeName, propertyName, value)) {\n                target[propertyName] = value;\n            }\n            else {\n                // TODO(choumx): Inform worker that sanitizer ignored unsafe property value change.\n            }\n        }\n    },\n    [4 /* COMMAND */](mutation) {\n        process(worker, mutation);\n    },\n};\n/**\n * Process MutationRecords from worker thread applying changes to the existing DOM.\n * @param nodes New nodes to add in the main thread with the incoming mutations.\n * @param mutations Changes to apply in both graph shape and content of Elements.\n * @param sanitizer Sanitizer to apply to content if needed.\n */\nexport function mutate(nodes, stringValues, mutations, sanitizer) {\n    //mutations: TransferrableMutationRecord[]): void {\n    // TODO(KB): Restore signature requiring lastMutationTime. (lastGestureTime: number, mutations: TransferrableMutationRecord[])\n    // if (performance.now() || Date.now() - lastGestureTime > GESTURE_TO_MUTATION_THRESHOLD) {\n    //   return;\n    // }\n    // this.lastGestureTime = lastGestureTime;\n    stringValues.forEach(value => storeString(value));\n    nodes.forEach(node => createNode(node, sanitizer));\n    MUTATION_QUEUE = MUTATION_QUEUE.concat(mutations);\n    if (!PENDING_MUTATIONS) {\n        PENDING_MUTATIONS = true;\n        requestAnimationFrame(() => syncFlush(sanitizer));\n    }\n}\n/**\n * Apply all stored mutations syncronously. This method works well, but can cause jank if there are too many\n * mutations to apply in a single frame.\n *\n * Investigations in using asyncFlush to resolve are worth considering.\n */\nfunction syncFlush(sanitizer) {\n    MUTATION_QUEUE.forEach(mutation => {\n        mutators[mutation[9 /* type */]](mutation, getNode(mutation[10 /* target */]), sanitizer);\n    });\n    MUTATION_QUEUE = [];\n    PENDING_MUTATIONS = false;\n}\n//# sourceMappingURL=mutator.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { prepareMutate, mutate } from './mutator';\nimport { createWorker } from './worker';\nimport { prepare as prepareNodes } from './nodes';\nconst ALLOWABLE_MESSAGE_TYPES = [3 /* MUTATE */, 2 /* HYDRATE */];\nexport function install(baseElement, authorURL, workerDOMUrl, workerCallbacks, sanitizer) {\n    prepareNodes(baseElement);\n    createWorker(baseElement, workerDOMUrl, authorURL, workerCallbacks).then(worker => {\n        if (worker === null) {\n            return;\n        }\n        prepareMutate(worker);\n        worker.onmessage = (message) => {\n            const { data } = message;\n            if (!ALLOWABLE_MESSAGE_TYPES.includes(data[9 /* type */])) {\n                return;\n            }\n            // TODO(KB): Hydration has special rules limiting the types of allowed mutations.\n            // Re-introduce Hydration and add a specialized handler.\n            mutate(data[35 /* nodes */], data[39 /* strings */], data[34 /* mutations */], sanitizer);\n            // Invoke callbacks after hydrate/mutate processing so strings etc. are stored.\n            if (workerCallbacks && workerCallbacks.onReceiveMessage) {\n                workerCallbacks.onReceiveMessage(message);\n            }\n        };\n    });\n}\n//# sourceMappingURL=install.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { install } from './install';\nexport function upgradeElement(baseElement, workerDOMUrl) {\n    const authorURL = baseElement.getAttribute('src');\n    if (authorURL) {\n        upgrade(baseElement, authorURL, workerDOMUrl);\n    }\n}\nexport function upgrade(baseElement, authorURL, workerDOMUrl) {\n    install(baseElement, authorURL, workerDOMUrl);\n}\n//# sourceMappingURL=index.js.map"],"names":["count","getString","strings","store","storeString","prepareNodes"],"mappings":"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"}